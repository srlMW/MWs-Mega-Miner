program MWsMegaMinerv1;
{$DEFINE SMART}
{$i srl-6/srl.simba}
{$i srl-6/lib/misc/srlplayerform.simba}

var
  scriptTimer, bankingTimer, antibanTimer, failsafeTimer: TTimeMarker;
  oresCollected, ironDTM, diamondDTM, rubyDTM, emeraldDTM, sapphireDTM: integer;
  pathToMine2: TPointArray;
  returnPoint := Point (120, 322);
  paintBMP := loadBitmap (appPath + '\Scripts\MWs Mega Miner v1\Paint.png');
  Hop: boolean;

procedure autoUpdateMe();
var
  newFile: integer;
  newScript, newFilePath: string;
  online_Version: extended;
begin
  sDebug('Checking for updates');
  online_Version := strToFloat(getPage('http://static.frement.net/proxy.php?u=https://raw.githubusercontent.com/srlMW/MWs-Mega-Miner/master/VERSION.txt'));
  sDebug('Local Version ' + toStr(Local_Version) + ', Online Version: ' + toStr(online_Version)+'.');

  if online_Version > Local_Version then
  begin
    writeLn('Downloading the latest script version from GitHub');
    newScript := getPage('http://static.frement.net/proxy.php?u=https://raw.githubusercontent.com/srlMW/MWs-Mega-Miner/master/MW%27s%20Mega%20Miner%20v1.simba');
    newFilePath := scriptPath+ 'MWs Mega Miner v' + toStr(online_Version) +'.simba';
    newFile := rewriteFile(newFilePath, true);

    if not writeFileString(newFile, newScript) then
    begin
      writeLn('Could not write to ' + newFilePath);
      terminatescript();
    end;

    closeFile(newFile);
    writeLn('Latest script downloaded to ' + newFilePath);
    writeLn('Please use the new one to run the latest version!');
    terminateScript();
  end else
    sDebug('Local version is already up to date!');
end;

procedure initPlayerForm();
begin
  with playerForm do
  begin
    name := 'MWs Mega Miner | v1';
    scriptHelpThread := '';
    editBoxLabels := ['Run for (amount)', 'World'];
    editBoxDefaults := ['18000000', '0'];
    editBoxHints := ['5hrs: 18000000 ', 'What world do you want to use?'];
    checkBoxLabels := ['Tin', 'Copper', 'Iron', 'Varrock West n East', 'Lumbridge Swamp East', 'Al Kharid', 'Barbarian Village', 'Falador Mine', 'Rimmington', 'Hop Worlds'];
    checkBoxDefaults := ['False', 'False', 'alse', 'False', 'False', 'False', 'False', 'False', 'false', 'true'];
    checkBoxHints := ['Mine Tin', 'Mine Copper', 'Mine Iron', 'Mining @ Varrock West & East', 'Mining @ Lumbridge Swamp East', 'Mining @ Al Kharid', 'Mining @ Barbarian Village', 'Mining @ Falador Mine', 'Mining @ Rimmington', 'If too many players are near you it will hop'];
  end;
end;

procedure declarePlayers();
var
  i: integer;
begin
  players.setup(playerForm.players);
  currentPlayer := 0;
  for i := 0 to high(players) do
    with players[i] do
    begin
      integers[0] := strToInt(playerForm.players[i].settings[0]);
      integers[1] := strToInt(playerForm.players[i].settings[1]);
      booleans[0] := strToBool(playerForm.players[i].settings[2]);
      booleans[1] := strToBool(playerForm.players[i].settings[3]);
      booleans[2] := strToBool(playerForm.players[i].settings[4]);
      booleans[3] := strToBool(playerForm.players[i].settings[5]);
      booleans[4] := strToBool(playerForm.players[i].settings[6]);
      booleans[5] := strToBool(playerForm.players[i].settings[7]);
      booleans[6] := strToBool(playerForm.players[i].settings[8]);
      booleans[7] := strToBool(playerForm.players[i].settings[9]);
      booleans[8] := strToBool(playerForm.players[i].settings[10]);
    end;
end;

const
  stats_Path = AppPath + 'Stats\';
  stats_File = 'Info.txt';

type
  TStats_Vars = record
    Name: string;
    Value: integer;
  end;

var
  stats_Timer: integer;
  stats_ID, stats_Pass, stats_ScriptID: string;
  stats_Vars: array of TStats_Vars;

procedure stats_Setup(_ScriptID: string);
var
  id, pass: string;
begin
  if (not directoryExists(stats_Path)) then
  begin
    forceDirectories(stats_Path);
    writeINI('General', 'Stats_ID', '', stats_Path + stats_File);
    writeINI('General', 'Stats_Pass', '', stats_Path + stats_File);
  end;
  id := readINI('General', 'Stats_ID', stats_Path + stats_File);
  pass := readINI('General', 'Stats_Pass', stats_Path + stats_File);
  if id = '' then
  begin
    case MessageBox('No Stats ID found, would you like to register?', 'Stats', 1) of
      1: openWebPage('http://stats.grats.pw/reg.php');
    end;
  end;
  stats_ID := id;
  stats_Pass := pass;
  stats_ScriptID := _ScriptID;
  stats_Timer := getSystemTime();
end

procedure stats_InitVariable(VarName: string; InitValue: Integer);
var
  len: Integer;
begin
  len := Length(stats_Vars);
  SetArrayLength(stats_Vars, len + 1);
  stats_Vars[len].Name := LowerCase(VarName);
  stats_Vars[len].Value := InitValue;
end;

procedure stats_SetVariable(VarName: string; NewValue: Integer);
var
  i, h: Integer;
begin
  h := High(stats_Vars);
  VarName := LowerCase(VarName);
  if (h >= 0) then
    for i := h downto 0 do
      if (VarName = stats_Vars[i].Name) then
      begin
        stats_Vars[i].Value := NewValue;
        Exit;
      end;
  stats_InitVariable(VarName, NewValue);
end;

procedure stats_IncVariable(VarName: string; Value: integer);
var
  i, h: Integer;
begin
  h := High(stats_Vars);
  VarName := LowerCase(VarName);
  if (h >= 0) then
    for i := h downto 0 do
      if (VarName = stats_Vars[i].Name) then
      begin
        stats_Vars[i].Value := stats_Vars[i].Value + Value;
        Exit;
      end;
  stats_InitVariable(VarName, Value);
end;

function stats_Commit(): Boolean;
var
  S: string;
  Client, i, Worked, ExtraTime: integer;
begin
  ExtraTime := getSystemTime() - stats_Timer;
  Worked := ExtraTime div 60000;
  if Worked < 5 then
    Exit;
  ExtraTime := ExtraTime - (Worked * 60000);
  stats_Timer := GetSystemTime - ExtraTime;
  Client := InitializeHTTPClient(False);
  ClearPostData(Client);
  if (stats_ID = '') then
  begin
    stats_ID := '5';
    stats_Pass := 'anon1337';
  end;
  AddPostVariable(Client, 'user_id', STATS_ID);
  AddPostVariable(Client, 'password', STATS_PASS);
  AddPostVariable(Client, 'script_id', STATS_SCRIPTID);
  AddPostVariable(Client, 'timeamount', toStr(Worked));
  if (Length(stats_Vars) > 0) then
    for i := high(stats_Vars) downto 0 do
      with stats_Vars[i] do
      begin
        if (Value <= 0) then
          Continue;
        AddPostVariable(Client, Name, toStr(Min(Value, 30000)));
      end;
  S := PostHTTPPageEx(Client, 'http://stats.grats.pw/POST.php');
  FreeHTTPClient(Client);
  case StrToIntDef(ExtractFromStr(S, Numbers), - 1) of
    42: Result := True;
    9001: writeln('Stats: Invalid user ID/Password.');
    1337: writeln('Stats: Invalid Script ID.');
    255, 496: writeln('Stats: Committing too fast; shame on you!');
    else
      writeln('Stats: No POST return');
  end;
  if Result then
  begin
    if (Length(stats_Vars) > 0) then
      for i := high(stats_Vars) downto 0 do
        with stats_Vars[i] do
        begin
          if (Value <= 0) then
            Continue;
          Value := 0;
        end;
  end;
end;

procedure initDTMs();
begin
  print('Initiating DTMs', TDebug.SUB);
  ironDTM := DTMFromString('mfgEAAHicrc5LC0BQEIbhc2yUlVtyKRayEiILoRQr//8PeU/NQp2Nha+emqmZaUKlVI4YHtwX0/sIECFBiUZUIkWBDTcunDiwYsaIHi0G6Scs2GXe7HXmTm0+0sL5SFt1pv6J/omdB+L3BkY=');
  diamondDTM := DTMFromString('mFQEAAHic42VgYJAGYl4o5gdiISCWAGJZIFZCwvJALIUkLwzE4lBxFSBWhWJlqJgkEAtCzQThE/v2AUkmJMyIhJmwYpAZpAJGMjAKAADg/wUi');
  sapphireDTM := DTMFromString('mKgEAAHic42NgYHAFYnMgtgBiSyC2BmI7IHYGYncg9oFiXyD2AmInqBoJIBYHYhkgVgBiZShWQcIgcUkgFgJiPiDmB2IR8clAkgkPZkSjIRhkDjmAkUyMCgC9oAYt');
  emeraldDTM := DTMFromString('mKgEAAHic42NgYMgH4kQoTgLiDCAuAuJSIC4H4jIgLoGqywbiVCBOBmIJKBYBYkEg5ofSYkAsBcTyQKyChJWhYsJdIBVMJGNJBvIAI5kYFQAABqYIWg==');
  rubyDTM := DTMFromString('mAAEAAHic42FgYJgJxP1A3A3FvUA8EYinAvEcIF4AxSD2FCCWAGJ+IBaCshWAWAUNSwKxIFRdhYQAkGRCw4w42ExgvaQARhIxMgAAqJUJHQ==');
end;

procedure freeTheDTMs();
begin
  print('Freeing DTMs', TDebug.SUB);
  freeDTM(ironDTM);
  freeDTM(sapphireDTM);
  freeDTM(emeraldDTM);
  freeDTM(rubyDTM);
  freeDTM(diamondDTM);
end;

procedure paintDisplay();
var
  profitMade, oreMined, xpGained, oreHR, profitHR, xpHR: integer;
begin
  profitMade := oresCollected * 28 * 205;
  oreMined := oresCollected * 28;
  xpGained := oresCollected * 28 * 35;
  oreHR := Round(oresCollected * 28 * (3600.0 / (GetTimeRunning / 1000.0)));
  profitHR := Round(profitMade * (3600.0 / (GetTimeRunning / 1000.0)));
  xpHR := Round(xpGained * (3600.0 / (GetTimeRunning / 1000.0)));
  smartImage.clear;
  smartImage.drawBitmap(paintBMP, Point(0, 330));
  smartImage.drawText(toStr(TimeRunning(TIME_BARE)), point(458, 575), 'smallcharsns', true, clwhite);
  smartImage.drawText(toStr(TimeRunning(TIME_BARE)), point(458, 555), 'smallcharsns', true, clyellow);
  smartImage.drawText(toStr(oreMined), point(231, 575), 'smallcharsns', true, clWhite);
  smartImage.drawText(toStr(profitMade), point(348, 575), 'smallcharsns', true, clWhite);
  smartImage.drawText(toStr(xpGained), point(117, 575), 'smallcharsns', true, clWhite);
  smartImage.drawText(toStr(oreHR), point(231, 555), 'smallcharsns', true, clyellow);
  smartImage.drawText(toStr(profitHR), point(348, 555), 'smallcharsns', true, clyellow);
  smartImage.drawText(toStr(xpHR), point(117, 555), 'smallcharsns', true, clyellow);
end;

procedure setup();
begin
  print('Setting up session', TDebug.SUB);
  mainscreen.setZoom(true);
  case random(10) of
    0..5: minimap.setAngle(90 + random(20));
    6..10: minimap.setAngle(90 + random(10));
  end;
  mainscreen.setAngle(MS_ANGLE_HIGH);
  if (not tabBackPack.isOpen) then
    tabBackPack.open;
end;

procedure findNormalRandoms();
begin
  print('Clearing useless stuff', TDebug.SUB);
  claimTicket();
  exitTreasure();
  closePopup();
  closeAdWindow();
end;

procedure loggingIn();
var
  slot: integer;
begin
  slot := players[currentPlayer].integers[0];
  if isLoggedIn then
    exit;
  print('Logging in', TDebug.SUB);
  if lobby.isOpen and (slot = 0) or (Hop = true) then
  begin
    lobbyWorlds.selectRandomWorld(players[currentPlayer].isMember);
    players[currentPlayer].login();
  end
  if lobby.isOpen then
  begin
    lobbyWorlds.selectWorld(slot);
    players[currentPlayer].login();
  end
  else if (not lobby.isOpen) and (slot = 0) or (Hop = true) then
  begin
    players[currentPlayer].loginToLobby();
    lobbyWorlds.selectRandomWorld(players[currentPlayer].isMember);
    players[currentPlayer].login();
  end
  else if (not lobby.isOpen) then
  begin
    players[currentPlayer].loginToLobby();
    lobbyWorlds.selectWorld(slot);
    players[currentPlayer].login();
  end;
  wait(randomRange(7500, 12000));
end;

procedure waitTime();
begin
  case random(11) of
    0..9:
      begin
        if (scriptTimer.getTime < 1200000) then
          case random(11) of
            0..5: wait(randomRange(10, 50));
            6..8: wait(randomRange(100, 500));
            9..10: wait(randomRange(1000, 3000));
          end
        else if (scriptTimer.getTime > 1200000) and (scriptTimer.getTime < 1800000) then
          case random(11) of
            0..3: wait(randomRange(10, 50));
            4..8: wait(randomRange(100, 500));
            9..10: wait(randomRange(1000, 3000));
          end
        else if (scriptTimer.getTime > 1800000) then
          case random(11) of
            0..1: wait(randomRange(10, 50));
            2..5: wait(randomRange(100, 500));
            6..10: wait(randomRange(1000, 3000));
          end;
      end;
    10:
      begin
        case random(11) of
          0..5: wait(randomRange(10, 50));
          6..8: wait(randomRange(100, 500));
          9..10: wait(randomRange(1000, 3000));
        end;
      end;
  end;
end;

procedure waitTime2();
begin
  if (scriptTimer.getTime < 1200000) then
    wait(randomRange(100, 200))
  else if (scriptTimer.getTime < 1800000) and (scriptTimer.getTime > 1200000) then
    wait(randomRange(300, 400))
  else if (scriptTimer.getTime < 2400000) and (scriptTimer.getTime > 1800000) then
    wait(randomRange(500, 600))
  else if (scriptTimer.getTime > 2400000) then
    wait(randomRange(600, 700))
end;

procedure antiban;
begin
  print('Calculating chance  of antiban', TDebug.SUB);
  if (antibanTimer.getTime < 600000) then
  begin
    randomMouseSpeed(3, 35, 55);
    case random(10000) of
      0..5: pickUpMouse();
      6..8: sleepAndMoveMouse(100 + random(50));
      9..10:
        begin
          gameTabs.openTab(TAB_FRIENDS_CHAT);
          wait(randomRange(100, 500));
          tabBackPack.open;
        end;
      11..12:
        begin
          hoverSkill(SKILL_MINING);
          wait(randomRange(100, 500));
          tabBackPack.open;
        end;
      13..14:
        begin
          gameTabs.openTab(TAB_FRIENDS);
          wait(randomRange(100, 500));
          case random(10) of
            0..1: hoverOnlineFriend();
          end;
          tabBackPack.open;
        end;
    end;
  end
  else if (antibanTimer.getTime > 600000) and (antibanTimer.getTime < 1200000) then
  begin
    randomMouseSpeed(3, 30, 50);
    case random(10000) of
      0..6: pickUpMouse();
      7..10: sleepAndMoveMouse(500 + random(100));
      11..13:
        begin
          gameTabs.openTab(TAB_FRIENDS_CHAT);
          wait(randomRange(200, 600));
          tabBackPack.open;
        end;
      14..16:
        begin
          hoverSkill(SKILL_MINING);
          wait(randomRange(200, 600));
          tabBackPack.open;
        end;
      17..19:
        begin
          gameTabs.openTab(TAB_FRIENDS);
          wait(randomRange(200, 600));
          case random(10) of
            0..1: hoverOnlineFriend();
          end;
          tabBackPack.open;
        end;
      20..22: smallRandomMouse();
      23..25: mouseMovingObject();
    end;
  end
  else if (antibanTimer.getTime > 1200000) and (antibanTimer.getTime < 1800000) then
  begin
    randomMouseSpeed(3, 25, 45);
    case random(10000) of
      0..7: pickUpMouse();
      8..11: sleepAndMoveMouse(1000 + random(200));
      12..14:
        begin
          gameTabs.openTab(TAB_FRIENDS_CHAT);
          wait(randomRange(300, 700));
          tabBackPack.open;
        end;
      15..17:
        begin
          hoverSkill(SKILL_MINING);
          wait(randomRange(300, 700));
          tabBackPack.open;
        end;
      18..20:
        begin
          gameTabs.openTab(TAB_FRIENDS);
          wait(randomRange(300, 700));
          tabBackPack.open;
        end;
      21..23: smallRandomMouse();
      24..27: mouseMovingObject();
      28..31: dragRandomItem();
      32..35: randomRClickItem();
    end;
  end
  else if (antibanTimer.getTime > 1800000) and (antibanTimer.getTime < 2400000) then
  begin
    randomMouseSpeed(3, 20, 40);
    case random(10000) of
      0..9: pickUpMouse();
      10..12: sleepAndMoveMouse(2000 + random(400));
      13..15:
        begin
          gameTabs.openTab(TAB_FRIENDS_CHAT);
          wait(randomRange(400, 800));
          tabBackPack.open;
        end;
      16..18:
        begin
          hoverSkill(SKILL_MINING);
          wait(randomRange(400, 800));
          tabBackPack.open;
        end;
      19..21:
        begin
          gameTabs.openTab(TAB_FRIENDS);
          wait(randomRange(400, 800));
          case random(10) of
            0..1: hoverOnlineFriend();
          end;
          tabBackPack.open;
        end;
      22..24: smallRandomMouse();
      25..31: mouseMovingObject();
      32..37: dragRandomItem();
      38..41: randomRClickItem();
      47..51: randomGameTab(true);
      52..56: randomCompass(10, 350, true);
    end;
  end
  else if (antibanTimer.getTime > 2400000) then
  begin
    randomMouseSpeed(3, 15, 35);
    case random(10000) of
      0..10: pickUpMouse();
      11..13: sleepAndMoveMouse(4000 + random(800));
      14..16:
        begin
          gameTabs.openTab(TAB_FRIENDS_CHAT);
          wait(randomRange(500, 900));
          tabBackPack.open;
        end;
      17..19:
        begin
          hoverSkill(SKILL_MINING);
          wait(randomRange(500, 900));
          tabBackPack.open;
        end;
      20..22:
        begin
          gameTabs.openTab(TAB_FRIENDS);
          wait(randomRange(500, 900));
          case random(10) of
            0..1: hoverOnlineFriend();
          end;
          tabBackPack.open;
        end;
      23..25: smallRandomMouse();
      26..33: mouseMovingObject();
      34..39: dragRandomItem();
      40..45: randomRClickItem();
      52..55: randomGameTab(true);
      56..61: randomCompass(10, 30, true);
      62..63:
        begin
          antibanTimer.reset;
          case random(10) of
            0..5:
              begin
                mouseOffClient(OFF_CLIENT_RANDOM);
                case random(35) of
                  0..10: wait(randomRange(310000, 600000));
                  11..30: wait(randomRange(310000, 360000));
                  31..32: wait(randomRange(600000, 1200000));
                  33..35: wait(randomRange(400000, 500000));
                end;
                if lobby.isOpen then
                  players[currentPlayer].leaveLobby();
              end;
            6..10:
              begin
                players[currentPlayer].logout();
              end;
          end;
          case random(100) of
            0..50:
              begin
                freeTheDTMs();
                smartReloadClient(randomRange(360000, 600000));
                print((TimeRunning), TDebug.DEBUG);
              end;
            51..70:
              begin
                freeTheDTMs();
                smartReloadClient(randomRange(600000, 1200000));
                print((TimeRunning), TDebug.DEBUG);
              end;
            71..90:
              begin
                freeTheDTMs();
                smartReloadClient(randomRange(1200000, 1800000));
                print((TimeRunning), TDebug.DEBUG);
              end;
            91..98:
              begin
                freeTheDTMs();
                smartReloadClient(randomRange(1800000, 2400000));
                print((TimeRunning), TDebug.DEBUG);
                antibanTimer.start();
              end;
            99..100:
              begin
                freeTheDTMs();
                smartReloadClient(randomRange(2400000, 3600000));
                print((TimeRunning), TDebug.DEBUG);
                antibanTimer.start();
              end;
          end;
          waitClientReady;
          loggingIn();
          initDTMs();
          findNormalRandoms();
          setup();
        end;
    end;
  end;
end;

procedure playerCheck();
var
  result: boolean;
begin
  result := length(minimap.getDots(MM_DOT_PLAYER, intToBox(660, 69, 727, 117), 40)) > 0;
  if result then
  begin
    print('Hopping worlds because players are nearby', TDebug.SUB);
    players[currentPlayer].exitToLobby();
    if lobby.isOpen then
    begin
      freeTheDTMs();
      initDTMs();
      loggingIn();
      findNormalRandoms();
      setup();
    end;
  end;
end;

procedure dropOres();
var
  dropTimer: TTimeMarker;
  backpack, bagfull: TBox;
  bagfullP: TPoint;
begin
  backpack.setBounds(578, 322, 794, 542);
  bagfull.setBounds(257, 549, 325, 557);
  bagfullP := bagfull.getRandomPoint;
  inc(oresCollected);
  paintDisplay();
  dropTimer.start;
  print('Dropping bag', TDebug.SUB);
  if (not bagfull.colorExists(2299911 ,4)) then
  begin
    mouse(bagfullP, MOUSE_MOVE, MOUSE_HUMAN);
    fastClick(MOUSE_LEFT);
  end;
  if backpack.dtmExists(sapphireDTM) then
    tabBackpack.clickDTM(sapphireDTM, MOUSE_RIGHT, 'rop Uncut sapphire', randomRange(100, 500), true);
  if backpack.dtmExists(emeraldDTM) then
    tabBackpack.clickDTM(emeraldDTM, MOUSE_RIGHT, 'rop Uncut emerald', randomRange(100, 500), true);
  if backpack.dtmExists(rubyDTM) then
    tabBackpack.clickDTM(rubyDTM, MOUSE_RIGHT, 'rop Uncut ruby', randomRange(100, 500), true);
  if backpack.dtmExists(diamondDTM) then
    tabBackpack.clickDTM(diamondDTM, MOUSE_RIGHT, 'rop Uncut diamond', randomRange(100, 500), true);
  if (not tabBackPack.isEmpty) then
    repeat
      typesend('1', false);
      wait(randomRange(50, 200));
    until tabBackPack.isEmpty or (dropTimer.getTime > 7500);
  if (dropTimer.getTime > 7500) and (not tabBackPack.isEmpty) then
    case random(4) of
      0: tabBackpack.dropItems(DROP_PATTERN_REGULAR);
      1: tabBackpack.dropItems(DROP_PATTERN_SNAKE);
      2: tabBackpack.dropItems(DROP_PATTERN_BACKWARDS);
      3: tabBackpack.dropItems(DROP_PATTERN_UP_DOWN);
    end;
  antiban();
  failsafeTimer.start;
end;

procedure clickOre();
begin
  if TabBackPack.isFull then
    exit;
  if lootScreen.isOpen then
    lootScreen.close;
  print('Clicking on rock', TDebug.SUB);
  fastClick(MOUSE_LEFT);
  smartImage.clear;
  case random(30) of
    0..3:
      begin
        case random(30) of
          0..5: pickUpMouse();
        end;
        case random(30) of
          0..10: sleepAndMoveMouse(100 + random(50));
          11..20: sleepAndMoveMouse(300 + random(70));
          21..27: sleepAndMoveMouse(600 + random(90));
          28..30: sleepAndMoveMouse(1000 + random(110));
        end;
      end;
    4..7:
      begin
        case random(30) of
          0..10: sleepAndMoveMouse(100 + random(50));
          11..20: sleepAndMoveMouse(300 + random(70));
          21..27: sleepAndMoveMouse(600 + random(90));
          28..30: sleepAndMoveMouse(1000 + random(110));
        end;
      end;
    8..12: pickUpMouse();
  end;
  wait(500 + random(100));
  if lootScreen.isOpen then
    lootScreen.close;
  tabBackpack.waitForShift(randomRange(5000, 7500));
  antiban();
end;

procedure mineRocks();
var
  x, y, i: integer;
  TPA, pathToMine2: TPointArray;
  ATPA: T2DPointArray;
  miningTimer: TTimeMarker;
begin
  if tabBackPack.isfull then
    dropOres();
  if lootScreen.isOpen then
    lootScreen.close;
  miningTimer.start;
  print('Finding rock to mine', TDebug.SUB);
  if players[currentPlayer].booleans[3] then
  begin
    if players[currentPlayer].booleans[0] then
      findColorsSpiralTolerance(x, y, TPA, 12171950, mainScreen.getBounds(), 14, colorSetting(2, 3.53, 0.58))
    else if players[currentPlayer].booleans[1] then
      findColorsSpiralTolerance(x, y, TPA, 5278153, mainScreen.getBounds(), 11, colorSetting(2, 0.20, 0.86))
    else if players[currentPlayer].booleans[2] then
      findColorsSpiralTolerance(x, y, TPA, 2175857, mainScreen.getBounds(), 9, colorSetting(2, 0.07, 0.64))
  end
  else if players[currentPlayer].booleans[4] then
  begin
    if players[currentPlayer].booleans[0] then
      findColorsSpiralTolerance(x, y, TPA, 12363968, mainScreen.getBounds(), 26, colorSetting(2, 0.42, 0.35))
    else if players[currentPlayer].booleans[1] then
      findColorsSpiralTolerance(x, y, TPA, 10478833, mainScreen.getBounds(), 16, colorSetting(2, 0.32, 1.46))
  end
  else if players[currentPlayer].booleans[5] then
  begin
    if players[currentPlayer].booleans[0] then
      findColorsSpiralTolerance(x, y, TPA, 10200770, mainScreen.getBounds(), 12, colorSetting(2, 0.41, 1.37))
    else if players[currentPlayer].booleans[1] then
      findColorsSpiralTolerance(x, y, TPA, 7063537, mainScreen.getBounds(), 10, colorSetting(2, 0.41, 0.95))
    else if players[currentPlayer].booleans[2] then
      findColorsSpiralTolerance(x, y, TPA, 6973996, mainScreen.getBounds(), 11, colorSetting(2, 4.55, 0.21))
  end
  else if players[currentPlayer].booleans[6] then
  begin
    if players[currentPlayer].booleans[0] then
      findColorsSpiralTolerance(x, y, TPA, 11514275, mainScreen.getBounds(), 18, colorSetting(2, 2.71, 0.46))
  end
  else if players[currentPlayer].booleans[7] then
  begin
    if players[currentPlayer].booleans[0] then
      findColorsSpiralTolerance(x, y, TPA, 10462150, mainScreen.getBounds(), 22, colorSetting(2, 0.01, 0.97))
    else if players[currentPlayer].booleans[1] then
      findColorsSpiralTolerance(x, y, TPA, 5351403, mainScreen.getBounds(), 11, colorSetting(2, 0.27, 1.96))
    else if players[currentPlayer].booleans[2] then
      findColorsSpiralTolerance(x, y, TPA, 2833515, mainScreen.getBounds(), 7, colorSetting(2, 0.07, 0.12))
  end
  else if players[currentPlayer].booleans[8] then
  begin
    if players[currentPlayer].booleans[0] then
      findColorsSpiralTolerance(x, y, TPA, 11579555, mainScreen.getBounds(), 18, colorSetting(2, 2.78, 0.44))
    else if players[currentPlayer].booleans[1] then
      findColorsSpiralTolerance(x, y, TPA, 6070472, mainScreen.getBounds(), 13, colorSetting(2, 0.37, 1.06))
    else if players[currentPlayer].booleans[2] then
      findColorsSpiralTolerance(x, y, TPA, 2372203, mainScreen.getBounds(), 11, colorSetting(2, 0.09, 1.02))
  end
  ATPA := SplitTPAEx(TPA, 5, 10);
  ATPA.sortFromMidPoint(mainscreen.playerPoint);
  smartImage.debugTPA(TPA, false);
  for i := 0 to high(ATPA) do
  begin
    mouse(middleTPA(ATPA[i]), MOUSE_MOVE, MOUSE_HUMAN);
    if players[currentPlayer].booleans[8] then
    begin
      if players[currentPlayer].booleans[0] then
      begin
        if isMouseOverText(['ine Tin ore', 'Mine Tin ore'], (randomRange(0, 100))) then
          clickOre();
      end
      else if players[currentPlayer].booleans[1] then
      begin
        if isMouseOverText(['ine Copper ore', 'Mine Copper ore'], (randomRange(0, 100))) then
          clickOre();
      end
      else if players[currentPlayer].booleans[2] then
      begin
        if isMouseOverText(['ine Iron ore', 'Mine Iron ore'], (randomRange(0, 100))) then
          clickOre();
      end
    end
    else
    begin
      if players[currentPlayer].booleans[0] then
      begin
        if isMouseOverText(['ine Tin', 'Mine Tin'], (randomRange(0, 100))) then
          clickOre();
      end
      else if players[currentPlayer].booleans[1] then
      begin
        if isMouseOverText(['ine Copper', 'Mine Copper'], (randomRange(0, 100))) then
          clickOre();
      end
      else if players[currentPlayer].booleans[2] then
      begin
        if isMouseOverText(['ine Iron', 'Mine Iron'], (randomRange(0, 100))) then
          clickOre();
      end
    end
  end;
  if lootScreen.isOpen then
    lootScreen.close;
  stats_commit();
  antiban();
  failsafeTimer.start;
end;

procedure mainloop();
begin
  failsafeTimer.start;
  minimap.toggleRun(true);
  while (tabBackpack.count() < 28) or (failsafeTimer.getTime < 300000) do
  begin
    mineRocks();
  end;
  stats_commit();
  failsafeTimer.start;
  dropOres();
  if players[currentPlayer].booleans[0] then
    begin
      stats_IncVariable('6', 28);
      stats_IncVariable('68', 490);
    end
  else if players[currentPlayer].booleans[1] then
    begin
      stats_IncVariable('5', 28);
      stats_IncVariable('68', 490);
    end
  else if players[currentPlayer].booleans[2] then
    begin
      stats_IncVariable('7', 28);
      stats_IncVariable('68', 980);
    end
end;

begin
  addOnTerminate('freeTheDTMs');
  clearDebug();
  smartEnableDrawing := true;
  initPlayerForm();
  runPlayerForm();
  if (not playerForm.isScriptReady) then
    exit;
  declarePlayers();
  setupSRL();
  Hop := False;
  if players[currentPlayer].booleans[9] then
    Hop := True;
  paintDisplay();
  initDTMs();
  stats_Setup('37');
  stats_commit();
  loggingIn();
  findNormalRandoms();
  setup();
  scriptTimer.start();
  antibanTimer.start();
  repeat
    if players[currentPlayer].booleans[9] then
      playerCheck();
    mainloop();
  until (scriptTimer.getTime() > players[currentPlayer].integers[0]);
  stats_commit();
  players[currentPlayer].logout();
  freeTheDTMs();
end.
